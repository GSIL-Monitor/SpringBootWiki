<!--
  ~ Copyright (c) 2010-2016.  by Moses   All rights reserved.
  ~
  -->

<!-- Logback configuration. See http://logback.qos.ch/manual/index.html -->
<configuration debug="false" scan="true" scanPeriod="10 seconds">
    <conversionRule conversionWord="clr" converterClass="org.springframework.boot.logging.logback.ColorConverter"/>
    <conversionRule conversionWord="wex"
                    converterClass="org.springframework.boot.logging.logback.WhitespaceThrowableProxyConverter"/>
    <conversionRule conversionWord="wEx"
                    converterClass="org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter"/>

    <!--<include resource="org/springframework/boot/logging/logback/base.xml"/>-->

    <!--<contextListener class="ch.qos.logback.classic.jul.LevelChangePropagator"/>-->
    <!-- Simple file output -->
    <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!-- encoder defaults to ch.qos.logback.classic.encoder.PatternLayoutEncoder -->
        <encoder>
            <pattern>
                %d{yyyy-MM-dd HH:mm:ss.SSS} ${LOG_LEVEL_PATTERN:-%5p} ${PID:- } --- [%t] %-40.40logger{39} :
                %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}
            </pattern>
            <charset>UTF-8</charset> <!-- 此处设置字符集 -->
        </encoder>

        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- rollover daily 配置日志所生成的目录以及生成文件名的规则 -->
            <!-- 按天来回滚，如果需要按小时来回滚，则设置为{yyyy-MM-dd_HH} -->
            <fileNamePattern>log/mylog-%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <!-- 如果按天来回滚，则最大保存时间为30天，30天之前的都将被清理掉 -->
            <maxHistory>30</maxHistory>
            <timeBasedFileNamingAndTriggeringPolicy
                    class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <!-- or whenever the file size reaches 128 MB -->
                <maxFileSize>128 MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>


        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>DEBUG</level>
        </filter>

        <!-- Safely log to the same file from multiple JVMs. Degrades performance! -->
        <!-- 支持多JVM同时操作同一个日志文件 -->
        <prudent>true</prudent>
    </appender>

    <!-- Console output -->
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>
                <!--%clr(%d{yyyy-MM-dd HH:mm:ss}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(-){faint}%clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}-->
                %clr(%d{MM-dd HH:mm:ss}){faint}%clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta}%clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}
            </pattern>
            <charset>UTF-8</charset> <!-- 此处设置字符集 -->
        </encoder>
        <!-- Only log level WARN and above -->
        <!--  <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
              <level>INFO</level>
          </filter>-->

    </appender>
    <appender name="DEBUG_LEVEL_REMAPPER" class="org.springframework.boot.logging.logback.LevelRemappingAppender">
        <destinationLogger>org.springframework.boot</destinationLogger>
    </appender>


    <!-- Enable FILE and STDOUT appenders for all log messages.
         By default, only log at level INFO and above. -->
    <root level="INFO">
        <appender-ref ref="FILE"/>
        <appender-ref ref="STDOUT"/>
    </root>

    <!-- For loggers in the these namespaces, log at separated levels. -->
    <logger name="net.liuxuan" level="DEBUG"/>


    <!--RequestMapping   set to INFO if you want to show-->
    <logger name="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping" level="INFO"/>
    <!--Mapping filter   set to INFO if you want to show-->
    <logger name="org.springframework.boot.context.embedded.FilterRegistrationBean" level="INFO"/>
    <!--Mapping servlet   set to INFO if you want to show-->
    <logger name="org.springframework.boot.context.embedded.ServletRegistrationBean" level="INFO"/>
    <!--URLinfo    set to Debug if you want to show-->
    <logger name="org.apache.coyote.http11.InternalNioInputBuffer" level="INFO"/>

    <logger name="org.springframework.security" level="INFO"/>
    <logger name="org.hibernate" level="INFO"/>
    <logger name="org.thymeleaf" level="INFO"/>
    <!--<logger name="org.thymeleaf.TemplateEngine" level="WARN"/>-->

    <logger name="org.apache.tomcat.util.net.NioEndpoint" level="INFO"/>
    <logger name="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping" level="INFO"/>
    <logger name="org.springframework.beans.factory.support.DefaultListableBeanFactory" level="INFO"/>
    <logger name="org.springframework.web.servlet.DispatcherServlet" level="INFO"/>
    <logger name="org.springframework.core.env.PropertySourcesPropertyResolver" level="INFO"/>
    <logger name="org.springframework.boot.autoconfigure.logging" level="INFO"/>


    <logger name="org.springframework.boot.actuate.endpoint.jmx" additivity="false">
        <appender-ref ref="DEBUG_LEVEL_REMAPPER"/>
    </logger>
   <!-- <logger name="org.thymeleaf" additivity="false">
        <appender-ref ref="DEBUG_LEVEL_REMAPPER"/>
    </logger>-->
    <!--控制logback.LogbackDemo类的日志打印，打印级别为“INFO”；
   additivity属性为false，表示此loger的打印信息不再向上级传递，
   指定了名字为“STDOUT”的appender。-->

    <logger name="logback" level="INFO" additivity="false">
        <appender-ref ref="STDOUT"/>
    </logger>
</configuration>